<!DOCTYPE html>
<html>

<head>
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.8.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v1.8.0/mapbox-gl.css' rel='stylesheet' />
</head>

<body>
    # Geocoder Api
    
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js"></script>
    <link
    rel="stylesheet"
    href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css"
    type="text/css"/>

    # Promise polyfill script required to use Mapbox GL Geocoder in IE 11 
    
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
    



    <div id='map' style='position: absolute; top: 0; bottom: 0; width: 100%; height: 100%;'></div>
    <script>
        mapboxgl.accessToken = 'pk.eyJ1Ijoibm9zc3UzNzUxIiwiYSI6ImNrNzRxbHo3bzA4MW4zZm8zdmxpZ294MzEifQ.HcBzxOgPOrQHFhplZ0FuXQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/nossu3751/ck757utxk36gn1io7vjmmmrnh/draft',
            center: [-71.057991, 42.360405],
            zoom: 16,
            minZoom: 15,
            maxZoom: 20
        });

        var marker = [];
        var popup = [];
    </script>

    <% @sensors.each do |sensor| %>
        <% locary = [] %>
        <% location = sensor.location.split(","); %>
        <% ownership = sensor.ownership %>
        <% location.each do |c| %>
            <% print locary %>
            <% locary.push(c.to_f) %>
        <% end %>
        <script>
            popup = new mapboxgl.Popup({offset:25}).setText(
                "ownership: " + <%= sensor.location %> 
            );

            marker_tmp = new mapboxgl.Marker(
                
            ).setLngLat([<%= locary[1] %>,<%= locary[0] %>]).setPopup(popup).addTo(map);
            marker.push(marker_tmp);
        </script>
    <% end %>
    
    
    




    <script>
    var coordinatesGeocoder = function(query) {
        
        var matches = query.match(
        /^[ ]*(?:Lat: )?(-?\d+\.?\d*)[, ]+(?:Lng: )?(-?\d+\.?\d*)[ ]*$/i
        );
        if (!matches) {
        return null;
        }
         
        function coordinateFeature(lng, lat) {
        return {
        center: [lng, lat],
        geometry: {
        type: 'Point',
        coordinates: [lng, lat]
        },
        place_name: 'Lat: ' + lat + ' Lng: ' + lng,
        place_type: ['coordinate'],
        properties: {},
        type: 'Feature'
        };
        }
         
        var coord1 = Number(matches[1]);
        var coord2 = Number(matches[2]);
        var geocodes = [];
         
        if (coord1 < -90 || coord1 > 90) {
        
        geocodes.push(coordinateFeature(coord1, coord2));
        }
         
        if (coord2 < -90 || coord2 > 90) {
        
        geocodes.push(coordinateFeature(coord2, coord1));
        }
         
        if (geocodes.length === 0) {
       
        geocodes.push(coordinateFeature(coord1, coord2));
        geocodes.push(coordinateFeature(coord2, coord1));
        }
         
        return geocodes;
        };

    </script>









    


    <script>
    
    var geocoder = (
        new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        localGeocoder: coordinatesGeocoder,
        mapboxgl: mapboxgl,
        placeholder: 'Search for places near City of Boston',
        bbox: [-71.26489546844812,42.24178291945654,-70.96325801708184,42.4569738383322],
        proximity: {
            longitude: -71.057991,
            latitude: 42.360405
        }
        })
    );
    map.addControl(geocoder);

    console.log(geocoder.query("Boston"));
    </script>

    <script>
        function rtnCoordinate(str){
            var matches = str.match(
                /^[ ]*(?:Lat: )?(-?\d+\.?\d*)[, ]+(?:Lng: )?(-?\d+\.?\d*)[ ]*$/i
            );
            if (!matches) {
                return geocoder.query(str).options.proximity;
            }
            return geocoder.query(coordinatesGeocoder(str)[0].place_name).options.proximity
        }
    </script>

    
</body>

</html>

# geocoder.query(coordinatesGeocoder("-71, 42")[0].place_name).options.proximity.latitude
    #42.004330945523094